name: CI checks

on: [push, pull_request]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      # We depend on a branch of ring, and need yasm.exe in %PATH% on Windows.
      - name: (Windows) Fetch Yasm
        if: matrix.os == 'windows-latest'
        run: python.exe -c "import os; from urllib.request import urlretrieve; urlretrieve('http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe', os.path.join(os.environ['GITHUB_WORKSPACE'], 'yasm.exe'))"
      - name: (Windows) Add Yasm to PATH
        if: matrix.os == 'windows-latest'
        run: echo "$env:GITHUB_WORKSPACE" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - run: cargo fetch
      - name: Build tests
        run: cargo build --verbose --release --tests
      - name: Run tests
        run: cargo test --verbose --release
      - name: Run tests that require threadpools
        run: cargo test --verbose --release -- --ignored

  bitrot:
    name: Bitrot check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      # Build benchmarks to prevent bitrot
      - name: Build benchmarks
        run: cargo build --benches

  codecov:
    name: Code coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined

    steps:
      - uses: actions/checkout@v3
      - name: Generate coverage report
        run: cargo +nightly tarpaulin --release --timeout 180 --out Xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  doc-links:
    name: Intra-doc links
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: cargo fetch

      # Ensure intra-documentation links all resolve correctly
      # Requires #![deny(rustdoc::broken_intra_doc_links)] in crate.
      - name: Check intra-doc links
        run: cargo doc --document-private-items

  fmt:
    name: Rustfmt
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check formatting
        run: cargo fmt -- --check
